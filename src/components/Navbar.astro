---
const links = [
  {
    label: "Home",
    url: "/",
  },
  {
    label: "About",
    url: "/about/",
  },

  {
    label: "Github",
    url: "/github",
  },
];

import Container from "./shared/Container.astro";
---

<header class="header border border-red-500 text-white" id="header">
  <Container>
    <nav class="nav-menu">
      <a href="/" class="header__logo">
        <span>LOGO</span>
      </a>

      <div class="nav-links">
        <ul>
          {
            links.map((link) => (
              <li class="nav__item">
                <a href="{{ link.url }}" class="nav__link">
                  {link.label}
                </a>
              </li>
            ))
          }
        </ul>
      </div>

      <button class="hamburger">
        <div class="hamburger__line"></div>
        <div class="hamburger__line"></div>
        <div class="hamburger__line"></div>
      </button>
    </nav>
  </Container>
</header>

<style>
  header {
    position: fixed;
    z-index: 100;
    width: 100%;
  }

  .header__logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: blue;
    z-index: 1000;
  }

  nav {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: center;
    z-index: 2030;
    border: solid green 2px;
  }

  .nav-links {
    background-color: slategray;
    height: 100vh;
    width: 75%;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 100;
    transform: translateX(100%);
    transition: all 0.3s ease-in-out;
    opacity: 0;
  }

  ul {
    margin-top: 200px;
    border: solid salmon 3px;
    display: flex;
    flex-direction: column;
  }

  li,
  li a {
    width: 100%;
  }

  .nav-menu--active .nav-links {
    transform: translateX(0);
    opacity: 1;
  }

  .nav__item {
    color: #fff;
    text-align: center;
    padding: 20px;
  }

  .hamburger {
    background: #ffffff;
    z-index: 1000;
    border: none;
    cursor: pointer;
    border-radius: 5px;
    padding: 0.5rem;
  }

  .hamburger__line {
    background-color: #708090;
    height: 3px;
    width: 25px;
    margin: 0.2rem 0;
    transition: 0.2s ease-in-out;
    border-radius: 2px;
  }

  .hamburger.hamburger--active .hamburger__line:nth-child(1) {
    transform: translatey(7px) rotate(45deg);
    background-color: salmon;
  }

  .hamburger.hamburger--active .hamburger__line:nth-child(2) {
    background: rgba(0, 0, 0, 0);
  }

  .hamburger.hamburger--active .hamburger__line:nth-child(3) {
    transform: translatey(-7px) rotate(-45deg);
    background-color: salmon;
  }

  .hamburger:hover .hamburger__line {
    background-color: gray;
  }

  @media (min-width: 768px) {
    .hamburger {
      display: none;
    }

    ul {
      position: relative;
      height: auto;
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;
    }
  }

  body.blurry .content {
    filter: blur(5px) brightness(0.6);
    overflow-y: hidden;
    display: block;
  }

  .scroll-lock {
    height: 100vh;
    overflow: hidden;
    border: solid 5px red;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", (event) => {
    // Get the header after the DOM is fully loaded
    const header = document.querySelector("header");
    const hamburger = document.querySelector(".hamburger");
    const nav = document.querySelector(".nav-menu");
    const body = document.querySelector("body");

    hamburger?.addEventListener("click", () => {
      hamburger.classList.toggle("hamburger--active");
      nav?.classList.toggle("nav-menu--active");

      body?.classList.toggle("blurry");
      body?.classList.toggle("scroll-lock");

      console.log(body);
    });

    window.addEventListener("scroll", () => {
      // Check for header and window scroll position
      if (header) {
        if (window.scrollY > 0) {
          header.classList.add("header-scrolled", "bg-slate-900");
        } else {
          header.classList.remove("header-scrolled", "bg-slate-900");
        }
      }
    });

    window.addEventListener("resize", () => {
      if (window.innerWidth > 760) {
        hamburger?.classList.remove("hamburger--active");
      }
    });
  });
</script>
